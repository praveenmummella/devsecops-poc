version: 0.2
env:
  parameter-store:
    SONAR_TOKEN: "/devsecops/sonar/token"
  variables:
    APP_PORT: "5000"
    SONAR_PROJECT_KEY: "devsecops-poc"
    ZAP_IMAGE: "ghcr.io/zaproxy/zaproxy:stable"
    ARTIFACT_NAME: "app.jar"
    ZAP_THRESHOLD: "MEDIUM"

phases:
  install:
    runtime-versions:
      java: corretto17
    commands:
      - echo "Creating guaranteed-working ZAP configuration..."
      - mkdir -p zap/reports
      - |
        # Create config with explicit tab characters
        cat > zap/zap.conf << 'EOL'
exclude	^.*/static/.*
level	MEDIUM
progress	100
rules	10011=IGNORE
rules	10015=IGNORE
rules	40012=WARN
EOL
        
        # Critical verification steps
        echo "Verifying configuration file:"
        echo "Tab character check (should show 1):"
        grep -P "exclude\t" zap/zap.conf | wc -l
        echo "Hex dump (09 = tab):"
        hexdump -C zap/zap.conf | head -5
        echo "Field count verification:"
        awk '{print "Line", NR, "has", NF, "fields"}' zap/zap.conf

  pre_build:
    commands:
      - export SONAR_TOKEN=$(aws ssm get-parameter --name "/devsecops/sonar/token" --with-decryption --query "Parameter.Value" --output text || echo "")

  build:
    commands:
      - mvn -B clean package

  post_build:
    commands:
      - echo "Starting application..."
      - nohup java -jar target/*.jar --server.port=${APP_PORT} > app.log 2>&1 & echo $! > app.pid
      - sleep 30
      
      - echo "Running ZAP scan with debug..."
      - >
        docker run --network host --rm
        -v $(pwd)/zap:/zap/wrk:rw
        ${ZAP_IMAGE}
        zap-baseline.py -d -v
        -t http://localhost:${APP_PORT}
        -c /zap/wrk/zap.conf
        -r /zap/wrk/reports/report.html
        -x /zap/wrk/reports/report.xml
        -j /zap/wrk/reports/report.json
        -l ${ZAP_THRESHOLD} || [ $? -eq 2 ] && echo "ZAP scan completed with warnings"
      
      - echo "Copying artifacts..."
      - cp target/*.jar ${ARTIFACT_NAME}

artifacts:
  files:
    - "${ARTIFACT_NAME}"
    - "zap/reports/*"
    - "app.log"
  name: "devsecops-artifacts"

cache:
  paths:
    - "/root/.m2/**/*"
