version: 0.2

env:
  variables:
    REPORT_BUCKET: devsecopspocreports
    JACOCO_REPORT_PATH: target/site/jacoco/index.html
    JACOCO_REPORT_DIR: target/site/jacoco
    DEPENDENCY_CHECK_REPORT_PATH: target/dependency-check-report.html
    OWASP_FAIL_ON_ERROR: "false"
    SNS_TOPIC_ARN: "arn:aws:sns:us-east-1:310188667383:build-notifications"
  parameter-store:
    SONAR_TOKEN: /devsecops/sonar/token
    SONAR_PROJECT_KEY: /devsecops/sonar/projectKey
    SONAR_ORGANIZATION: /devsecops/sonar/organization
    NVD_API_KEY: /devsecops/nvd/apikey

phases:
  install:
    runtime-versions:
      java: corretto17
    commands: [
      "echo 'Setting up environment...'",
      "apt-get update -y",
      "apt-get install -y maven unzip",
      "curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006.zip",
      "unzip sonar-scanner.zip",
      "mv sonar-scanner-* sonar-scanner",
      "export PATH=$PATH:$(pwd)/sonar-scanner/bin",
      "mkdir -p $HOME/.dependency-check/data",
      "chmod -R 777 $HOME/.dependency-check"
    ]

  pre_build:
    commands: [
      "echo 'Pre-build phase started...'",
      "echo 'Project Key: $SONAR_PROJECT_KEY'",
      "echo 'Organization: $SONAR_ORGANIZATION'",
      "mkdir -p target/site/jacoco",
      "mkdir -p target"
    ]

  build:
    commands: [
      "echo 'Build phase started...'",
      "mvn clean package",
      "mvn jacoco:report",
      # Modified dependency-check command to ensure report generation
      "mvn org.owasp:dependency-check-maven:aggregate -Dnvd.api.key=$NVD_API_KEY -Dnvd.api.delay=6000 -DfailOnError=$OWASP_FAIL_ON_ERROR -Dodc.outputDirectory=target -Dodc.outputFileName=dependency-check-report.html || echo 'Dependency check completed with warnings'",
      "mvn sonar:sonar -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.organization=$SONAR_ORGANIZATION -Dsonar.login=$SONAR_TOKEN || echo 'Sonar analysis completed with warnings'"
    ]

  post_build:
    commands: [
      "echo 'Post-build phase started...'",
      "echo 'Uploading reports...'",
      # Jacoco report upload
      "if [ -d \"$JACOCO_REPORT_DIR\" ]; then aws s3 cp \"$JACOCO_REPORT_DIR\" s3://$REPORT_BUCKET/reports/jacoco/ --recursive && echo 'JaCoCo report uploaded' || echo 'JaCoCo upload failed'; else echo 'JaCoCo report not found'; fi",
      # Dependency check report upload with explicit path
      "if [ -f \"target/dependency-check-report.html\" ]; then aws s3 cp target/dependency-check-report.html s3://$REPORT_BUCKET/reports/ && echo 'Dependency check report uploaded' || echo 'Dependency check upload failed'; else echo 'Dependency check report not found'; ls -la target/; fi",
      # SNS notification with simplified topic ARN
      "if [ \"$CODEBUILD_BUILD_SUCCEEDING\" -eq 1 ]; then aws sns publish --topic-arn \"$SNS_TOPIC_ARN\" --message \"Build succeeded: $CODEBUILD_BUILD_ID\" && echo 'Success notification sent'; else aws sns publish --topic-arn \"$SNS_TOPIC_ARN\" --message \"Build failed: $CODEBUILD_BUILD_ID - $CODEBUILD_BUILD_URL\" && echo 'Failure notification sent'; fi"
    ]

artifacts:
  files: [
    "target/*.jar",
    "target/*.war",
    "target/site/jacoco/index.html",
    "target/dependency-check-report.html"
  ]
  name: devsecops-artifacts
  discard-paths: no
