version: 0.2

env:
  variables:
    SONAR_PROJECT_KEY: "devsecops-poc"
    APP_PORT: "5000"
    ZAP_IMAGE: "ghcr.io/zaproxy/zaproxy:stable"

phases:
  install:
    runtime-versions:
      java: corretto17
    commands:
      # 1. Verify Docker
      - docker info
      
      # 2. Pull ZAP
      - docker pull ${ZAP_IMAGE}
      
      # 3. Install SonarScanner (using current URL)
      - SONAR_SCANNER_URL="https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip"
      - curl -sSL --retry 3 --retry-delay 5 -o sonar-scanner.zip "${SONAR_SCANNER_URL}"
      - if ! file sonar-scanner.zip | grep -q "Zip archive"; then
          echo "Download verification failed, trying alternative URL...";
          SONAR_SCANNER_URL="https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-linux.zip";
          curl -sSL -o sonar-scanner.zip "${SONAR_SCANNER_URL}";
        fi
      - unzip -qq sonar-scanner.zip -d /opt
      - rm sonar-scanner.zip
      - ln -s /opt/sonar-scanner-*/bin/sonar-scanner /usr/local/bin/

  pre_build:
    commands:
      - mvn dependency:go-offline -B

  build:
    commands:
      - mvn -B clean package
      - mvn sonar:sonar \
          -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${SONAR_TOKEN} \
          -Dsonar.java.binaries=target/classes \
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
      - mvn -B dependency-check:check

  post_build:
    commands:
      # Start application
      - nohup java -jar target/*.jar --server.port=${APP_PORT} > app.log 2>&1 & echo $! > app.pid
      - sleep 20

      # Health check
      - timeout 60 bash -c 'until curl -sSf http://localhost:${APP_PORT}/health; do sleep 2; done'

      # ZAP scan
      - docker run --network host --rm \
          -v $(pwd)/target:/zap/wrk \
          -e JAVA_OPTS="-Xmx4096m" \
          ${ZAP_IMAGE} \
          zap-baseline.py \
          -t http://localhost:${APP_PORT} \
          -r zap-report.html \
          -x zap-report.xml \
          -J zap-report.json

      # Cleanup
      - kill $(cat app.pid) || true

artifacts:
  files:
    - target/*.jar
    - target/site/**
    - target/*-report.*
    - app.log
  name: devsecops-artifacts-${CODEBUILD_BUILD_ID}
