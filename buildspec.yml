version: 0.2

env:
  variables:
    REPORT_BUCKET: devsecopspocreports
    JACOCO_REPORT_DIR: target/site/jacoco
    DEPENDENCY_CHECK_REPORT: target/dependency-check-report.html
    JAVA_VERSION: 17
  parameter-store:
    SONAR_TOKEN: /devsecops/sonar/token
    SONAR_PROJECT_KEY: /devsecops/sonar/projectKey
    SONAR_ORGANIZATION: /devsecops/sonar/organization

phases:
  install:
    runtime-versions:
      java: corretto17
    commands:
      - echo "Installing dependencies..."
      - yum install -y maven docker
      - service docker start
      - echo "Java version: $(java -version 2>&1 | head -1)"

  pre_build:
    commands:
      - echo "Pre-build phase started..."
      - echo "Project Key: $SONAR_PROJECT_KEY"
      - echo "Organization: $SONAR_ORGANIZATION"
      - mkdir -p target/site/jacoco

  build:
    commands:
      - echo "Build phase started..."
      - mvn clean verify
      - mvn jacoco:report
      - mvn org.owasp:dependency-check-maven:check -DfailOnError=false
      - mvn sonar:sonar -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.organization=$SONAR_ORGANIZATION -Dsonar.login=$SONAR_TOKEN

  post_build:
    commands:
      - echo "Post-build phase started..."
      - echo "Checking reports..."
      - bash -c 'if [ -f "target/site/jacoco/index.html" ]; then aws s3 cp target/site/jacoco s3://$REPORT_BUCKET/reports/jacoco/ --recursive --acl public-read; else echo "JaCoCo report not found"; fi'
      - bash -c 'if [ -f "target/dependency-check-report.html" ]; then aws s3 cp target/dependency-check-report.html s3://$REPORT_BUCKET/reports/ --acl public-read; else echo "Dependency check report not found"; fi'
      - bash -c 'if [ $? -eq 0 ]; then mvn exec:exec@send-success-email; else mvn exec:exec@send-failure-email; fi'

artifacts:
  files:
    - "target/*.jar"
    - "target/*.war"
    - "target/site/jacoco/**/*"
    - "target/dependency-check-report.html"
  name: devsecops-artifacts
  discard-paths: no
